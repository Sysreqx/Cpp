//17. Конструкторы.Конструктор копирования.

Конструктор — это особый тип метода класса, который автоматически вызывается при создании объекта этого же класса.Конструкторы обычно используются для инициализации переменных - членов класса значениями, которые предоставлены по умолчанию / пользователем, или для выполнения любых шагов настройки, необходимых для используемого класса(например, открыть определенный файл или базу данных).

В отличие от обычных методов, конструкторы имеют определенные правила их именования :

конструкторы всегда должны иметь то же имя, что и класс(учитываются верхний и нижний регистры);

конструкторы не имеют типа возврата(даже void).

// класс CMyPoint
class CMyPoint
{
    int x, y;

public:
    CMyPoint(void); // конструктор класса по умолчанию
    CMyPoint(int nx, int ny); // конструктор класса с двумя параметрами
    CMyPoint(const CMyPoint& ref_Point); // конструктор копирования
};

// реализация конструкторов (методов) класса
// конструктор класса CMyPoint
CMyPoint::CMyPoint(void)
{
    x = y = 0;
}

// конструктор класса CMyPoint с двумя параметрами
CMyPoint::CMyPoint(int nx, int ny)
{
    x = nx;
    y = ny;
}


Конструктор копирования — это особый тип конструктора, который используется для создания нового объекта через копирование существующего объекта.И, как в случае с конструктором по умолчанию, если вы не предоставите конструктор копирования для своих классов самостоятельно, то язык C++ создаст public - конструктор копирования автоматически.Поскольку компилятор мало знает о вашем классе, то по умолчанию созданный конструктор копирования будет использовать почленную инициализацию.Почленная инициализация означает, что каждый член объекта - копии инициализируется непосредственно из члена объекта - оригинала

// конструктор копирования класса CMyPoint
// передается ссылка на CMyPoint
CMyPoint::CMyPoint(const CMyPoint& ref_Point)
{
    // копирование данных из одного объекта в другой
    x = ref_Point.x;
    y = ref_Point.y;
}